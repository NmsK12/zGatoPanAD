<div class="row">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title mb-1 neon-white">
                            <i class="fas fa-key me-2"></i>Gestionar API Keys
                        </h5>
                        <p class="card-text neon-purple"><%= serverInfo.name %> - <%= serverInfo.url %></p>
                    </div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#generateModal">
                        <i class="fas fa-plus me-2"></i>Generar Nueva Key
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0 neon-white">API Keys Existentes</h6>
            </div>
            <div class="card-body">
                <% if (keys.length === 0) { %>
                    <div class="text-center py-5">
                        <i class="fas fa-key fa-3x neon-purple mb-3"></i>
                        <h6 class="neon-white">No hay API Keys generadas</h6>
                        <p class="neon-purple">Genera tu primera API Key para comenzar</p>
                    </div>
                <% } else { %>
                    <div class="table-responsive">
                        <table class="table table-dark table-hover">
                            <thead>
                                <tr>
                                    <th class="neon-white">API Key</th>
                                    <th class="neon-white">Descripción</th>
                                    <th class="neon-white">Estado</th>
                                    <th class="neon-white">Tiempo Restante</th>
                                    <th class="neon-white">Expira</th>
                                    <th class="neon-white">Último Uso</th>
                                    <th class="neon-white">Creado Por</th>
                                    <th class="neon-white">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% keys.forEach(key => { %>
                                    <tr>
                                        <td>
                                            <code class="api-key"><%= key.key %></code>
                                        </td>
                                        <td class="neon-white"><%= key.description || 'Sin descripción' %></td>
                                        <td>
                                            <span class="status-badge <%= key.is_expired ? 'status-expired' : 'status-active' %>">
                                                <%= key.is_expired ? 'Expirada' : 'Activa' %>
                                            </span>
                                        </td>
                                        <td class="neon-white" id="time-<%= key.id %>">
                                            <%= key.time_remaining_formatted %>
                                        </td>
                                        <td class="neon-white"><%= key.expires_at_formatted %></td>
                                        <td class="neon-white"><%= key.last_used_formatted %></td>
                                        <td class="neon-white"><%= key.created_by %></td>
                                        <td>
                                            <% if (key.can_delete) { %>
                                                <button class="btn btn-danger btn-sm" onclick="deleteKey('<%= key.id %>', '<%= key.key %>')">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            <% } else { %>
                                                <span class="text-muted">Solo el creador</span>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Modal para generar nueva API Key -->
<div class="modal fade" id="generateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" style="background: var(--secondary-bg); border: 1px solid var(--border-color);">
            <div class="modal-header" style="border-bottom: 1px solid var(--border-color);">
                <h5 class="modal-title neon-white">Generar Nueva API Key</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="generateForm">
                    <div class="mb-3">
                        <label for="description" class="form-label neon-purple">Descripción</label>
                        <input type="text" class="form-control" id="description" name="description" 
                               placeholder="Ej: API Key para mi aplicación" required>
                    </div>
                    <div class="mb-3">
                        <label for="timeType" class="form-label neon-purple">Tiempo</label>
                        <select class="form-select" id="timeType" name="timeType" onchange="updateTimeOptions()">
                            <option value="minutes">Minutos</option>
                            <option value="hours" selected>Horas</option>
                            <option value="days">Días</option>
                            <option value="months">Meses</option>
                            <option value="years">Años</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="timeValue" class="form-label neon-purple">Temporizador</label>
                        <input type="number" class="form-control" id="timeValue" name="timeValue" 
                               placeholder="Ingresa la cantidad" min="1" value="1" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer" style="border-top: 1px solid var(--border-color);">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="generateKey()">Generar Key</button>
            </div>
        </div>
    </div>
</div>

<script>
function updateTimeOptions() {
    const timeType = document.getElementById('timeType').value;
    const timeValue = document.getElementById('timeValue');
    
    switch(timeType) {
        case 'minutes':
            timeValue.placeholder = 'Ingresa los minutos (ej: 30)';
            break;
        case 'hours':
            timeValue.placeholder = 'Ingresa las horas (ej: 2)';
            break;
        case 'days':
            timeValue.placeholder = 'Ingresa los días (ej: 7)';
            break;
        case 'months':
            timeValue.placeholder = 'Ingresa los meses (ej: 1)';
            break;
        case 'years':
            timeValue.placeholder = 'Ingresa los años (ej: 1)';
            break;
    }
}

function generateKey() {
    const form = document.getElementById('generateForm');
    const formData = new FormData(form);
    
    const data = {
        description: formData.get('description'),
        timeType: formData.get('timeType'),
        timeValue: parseInt(formData.get('timeValue'))
    };
    
    fetch('/api-keys/<%= server %>', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showSuccess('API Key generada correctamente');
            setTimeout(() => {
                location.reload();
            }, 1500);
        } else {
            showError(data.error || 'Error generando API Key');
        }
    })
    .catch(error => {
        showError('Error de conexión');
    });
}

function deleteKey(keyId, keyValue) {
    if (confirm('¿Estás seguro de que quieres eliminar esta API Key?')) {
        fetch(`/api-keys/<%= server %>/${keyId}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showSuccess('API Key eliminada correctamente');
                setTimeout(() => {
                    location.reload();
                }, 1500);
            } else {
                showError(data.error || 'Error eliminando API Key');
            }
        })
        .catch(error => {
            showError('Error de conexión');
        });
    }
}

// Actualizar timers cada segundo
function updateTimers() {
    const timeElements = document.querySelectorAll('[id^="time-"]');
    timeElements.forEach(element => {
        const currentText = element.textContent;
        if (currentText && currentText !== 'Expirada' && currentText !== 'N/A') {
            // Aquí podrías implementar la lógica para actualizar el tiempo restante
            // Por ahora solo mantenemos el texto actual
        }
    });
}

// Actualizar timers cada segundo
setInterval(updateTimers, 1000);
</script>